<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- Empty target so that `dotnet test` will work on the solution -->
  <!-- https://github.com/Microsoft/vstest/issues/411 -->
  <Target Name="VSTest" Condition="'$(IsTestProject)' == 'true'"/>

  <ItemGroup>
    <!-- Shared config files that have to exist at root level. -->
    <SixLaborsConfigFilesToCopy Include="$(MSBuildThisFileDirectory)..\..\.editorconfig;$(MSBuildThisFileDirectory)..\..\.gitattributes;$(MSBuildThisFileDirectory)..\..\codecov.yml;" />
  </ItemGroup>

  <!-- Copy the config files on src build. -->
  <Target Name="SixLaborsCopyConfigFiles" BeforeTargets="Build" Condition="'$(SixLaborsDisableConfigCopy)' == ''">
    <Copy SourceFiles="@(SixLaborsConfigFilesToCopy)"
          SkipUnchangedFiles = "true"
          DestinationFolder="$(SixLaborsSolutionDirectory)" />
  </Target>

  <!--
      This target is responsible for copying licensing files to the licensing NuGet package
      to our build output.
      See SixLabors.Src.props for the package references.
      Hook into NuGet pack.
  -->
  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>
      $(TargetsForTfmSpecificContentInPackage);_SixLabors_AddLicensingFiles
    </TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

  <!-- Add files per TFM from the *package cache* only -->
  <Target Name="_SixLabors_AddLicensingFiles"
          Condition="'$(IsPackable)'=='true'
                 and '$(TargetFramework)'!=''
                 and $([System.String]::Copy('$(PackageId)').StartsWith('SixLabors.'))
                 and '$(PackageId)'!='SixLabors.Licensing'
                 and '$(PkgSixLabors_Licensing)'!=''">

    <ItemGroup>
      <!-- Rename the validator template into the consuming package -->
      <TfmSpecificPackageFile Include="$(PkgSixLabors_Licensing)\build\SixLabors.ValidateLicense.targets"
                              Condition="Exists('$(PkgSixLabors_Licensing)\build\SixLabors.ValidateLicense.targets')">
        <PackagePath>build\$(PackageId).targets</PackagePath>
      </TfmSpecificPackageFile>

      <!-- dotnet MSBuild task -->
      <TfmSpecificPackageFile Include="$(PkgSixLabors_Licensing)\build\net8.0\SixLabors.Licensing.dll"
                              Condition="Exists('$(PkgSixLabors_Licensing)\build\net8.0\SixLabors.Licensing.dll')">
        <PackagePath>build\net8.0\SixLabors.Licensing.dll</PackagePath>
      </TfmSpecificPackageFile>

      <!-- VS/CLR4 MSBuild task -->
      <TfmSpecificPackageFile Include="$(PkgSixLabors_Licensing)\build\net472\SixLabors.Licensing.dll"
                              Condition="Exists('$(PkgSixLabors_Licensing)\build\net472\SixLabors.Licensing.dll')">
        <PackagePath>build\net472\SixLabors.Licensing.dll</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <!-- Hard fail if the package path isn't resolvable -->
  <Target Name="FailIfLicensingPathMissing" BeforeTargets="Pack"
          Condition="'$(IsPackable)'=='true'
                 and '$(TargetFramework)'!=''
                 and $([System.String]::Copy('$(PackageId)').StartsWith('SixLabors.'))
                 and '$(PackageId)'!='SixLabors.Licensing'
                 and ( '$(PkgSixLabors_Licensing)'=='' 
                       or !Exists('$(PkgSixLabors_Licensing)\build\net8.0\SixLabors.Licensing.dll') )">
    <Error Text="Licensing task not found under $(PkgSixLabors_Licensing)\build\net8.0. Ensure the dev-only PackageReference (GeneratePathProperty='true') is present and restore ran." />
  </Target>

</Project>
